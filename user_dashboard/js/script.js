// script.js
document.addEventListener("DOMContentLoaded", function () {
    function removeWithAnimation(element) {
        if (!element) return;
        element.style.transition = "opacity 0.5s ease, transform 0.5s ease";
        element.style.opacity = "0";
        element.style.transform = "translateY(-10px)"; // –õ—ë–≥–∫–∏–π –ø–æ–¥—ä–µ–º –ø–µ—Ä–µ–¥ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏–µ–º
        setTimeout(() => {
            element.remove();
        }, 500); // –£–¥–∞–ª—è–µ–º –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
    }
    function animateAppearance(element) {
        if (!element) return;
        element.style.opacity = "0"; // –ù–∞—á–∞–ª—å–Ω–∞—è –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å
        element.style.transform = "translateY(-10px)"; // –õ–µ–≥–∫–∏–π –ø–æ–¥—ä–µ–º
        element.style.transition = "opacity 0.5s ease, transform 0.5s ease";
        // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é —Å –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π
        setTimeout(() => {
            element.style.opacity = "1";
            element.style.transform = "translateY(0)";
        }, 50);
    }
    let previousTickets = []; // –•—Ä–∞–Ω–∏–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–∏–∫–µ—Ç–æ–≤
    // –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–∏–∫–µ—Ç–æ–≤
    async function loadTickets() {
        try {
            const response = await fetch(`/ticketing_system/user_dashboard/php/check.php?nocache=${Date.now()}`);
            const data = await response.json();
            if (!Array.isArray(data)) {
                console.error("‚ùå –û—à–∏–±–∫–∞: —Å–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ!", data);
                return;
            }
            // –ï—Å–ª–∏ –ø–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ ‚Äî –ø—Ä–æ—Å—Ç–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–∏–∫–µ—Ç—ã
            if (previousTickets.length === 0) {
                previousTickets = data;
                console.log(`üîÑ –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ç–∏–∫–µ—Ç–æ–≤: ${data.length}`);
                return;
            }
            let changesFound = false;

            data.forEach(ticket => {
                if (!ticket || !ticket.id || typeof ticket.status !== "string") {
                    console.warn("‚ö†Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ç–∏–∫–µ—Ç:", ticket);
                    return;
                }
                let previous = previousTickets.find(prev => prev.id === ticket.id);

                // –ï—Å–ª–∏ —Ç–∏–∫–µ—Ç —É–∂–µ –±—ã–ª, –Ω–æ –µ–≥–æ —Å—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–∏–ª—Å—è
                if (previous && previous.status !== ticket.status) {
                    console.log(`üîÑ –¢–∏–∫–µ—Ç ID: ${ticket.id} –∏–∑–º–µ–Ω–∏–ª —Å—Ç–∞—Ç—É—Å: ${previous.status} ‚ûù ${ticket.status}`);
                    updateTicketInTable(ticket);
                    changesFound = true;
                }
            });

            if (!changesFound) {
                console.log("‚úÖ –°—Ç–∞—Ç—É—Å—ã –Ω–µ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å");
            }

            previousTickets = data; // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ —Ç–∏–∫–µ—Ç—ã
        } catch (error) {
            console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–∏–∫–µ—Ç–æ–≤:", error);
        }
    }
    // –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Ç–∏–∫–µ—Ç–æ–≤ —Å—Ä–∞–∑—É
    loadTickets();
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥
    setInterval(loadTickets, 10000);
    function showUpdateText() {
        let textElement = document.getElementById("text_update_ticket");
        if (!textElement) return;
    
        textElement.style.display = "block"; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç
    
        setTimeout(() => {
            textElement.style.display = "none"; // –°–∫—Ä—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
        }, 3000);
    }
    // –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∏–∫–µ—Ç–∞ –≤ —Ç–∞–±–ª–∏—Ü–µ
    function updateTicketInTable(ticket) {
        if (!ticket || !ticket.id || typeof ticket.status !== "string") {
            console.error("‚ùå –û—à–∏–±–∫–∞: –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ç–∏–∫–µ—Ç–∞", ticket);
            return;
        }
        showUpdateText(); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º "–ó–∞—è–≤–∫–∏ –û–±–Ω–æ–≤–ª–µ–Ω—ã
        let openTableBody = document.querySelector("#open-tickets tbody");
        let closedTableBody = document.querySelector("#closed-tickets tbody");

        let existingTicketRow = document.querySelector(`#ticket-${ticket.id}`);
        let existingDetailsRow = document.querySelector(`#details-${ticket.id}`);

        if (existingTicketRow)  removeWithAnimation(existingTicketRow);
        if (existingDetailsRow) removeWithAnimation(existingDetailsRow);

        let targetTableBody = ticket.status === "open" ? openTableBody : closedTableBody;

        if (!targetTableBody) {
            console.error("‚ùå –¢–∞–±–ª–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!");
            return;
        }
        let title = ticket.title || "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è";
        let description = ticket.description || "–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è";
        let assignedAdmin = ticket.assigned_admin || "–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω"; 
        let adminPosition = ticket.admin_position || "–ù–µ —É–∫–∞–∑–∞–Ω–∞"; 
        let createdAt = ticket.created_at || "–î–∞—Ç–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞";
        let updatedAt = ticket.updated_at || "–ù–µ –æ–±–Ω–æ–≤–ª—è–ª—Å—è";

        let row = document.createElement("tr");
        row.id = `ticket-${ticket.id}`;
        row.innerHTML = `
            <td>
            <span class="ticket-id">${ticket.id}</span>
            ${ticket.status === "closed" ? '<span class="star">*</span>' : ""}
        </td>
            <td>${title.length > 10 ? title.substring(0, 10) + "..." : title}</td>
            <td>${description.length > 10 ? description.substring(0, 10) + "..." : description}</td>
            <td>${adminPosition.length > 10 ? adminPosition.substring(0, 10) + "..." : adminPosition}</td>
           
            <td>${createdAt}</td>
            ${ticket.status === "closed" ? `<td>${updatedAt}</td>` : ""}
             <td class="ticket-status ${ticket.status === "open" ? "status-open" : "status-closed"}">${ticket.status}</td>
            <td><button class="toggle-details-btn" onclick="toggleDetails(${ticket.id})">–ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª–∏</button></td>
        `;

        let detailsRow = document.createElement("tr");
        detailsRow.id = `details-${ticket.id}`;
        detailsRow.classList.add("ticket-details");
        detailsRow.innerHTML = `
            <td colspan="${ticket.status === "closed" ? 9 : 8}">
                <div class="ticket-details-box">
                    <p><strong>ID:</strong> ${ticket.id}</p>
                    <p><strong>–ó–∞–≥–æ–ª–æ–≤–æ–∫:</strong> ${title}</p>
                    <p><strong>–û–ø–∏—Å–∞–Ω–∏–µ:</strong> ${description}</p>
                    <p><strong>–ò–º—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è:</strong> ${adminPosition}</p>
                    <p><strong>–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è:</strong> ${createdAt}</p>
                    ${ticket.status === "closed" ? `<p><strong>–î–∞—Ç–∞ –∑–∞–∫—Ä—ã—Ç–∏—è:</strong> ${updatedAt}</p>` : ""}
                    <p><strong>–°—Ç–∞—Ç—É—Å:</strong> <span class="${ticket.status === "open" ? "status-open" : "status-closed"}">${ticket.status}</span></p>
                </div>
            </td>
        `;
        targetTableBody.prepend(detailsRow);
        targetTableBody.prepend(row);
          // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
    animateAppearance(row);
    animateAppearance(detailsRow);
    }
    const style = document.createElement("style");
    style.innerHTML = `
        .star {
            color: green;
            margin-left: 8px;
            font-size: 22px; /* –£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π —Ä–∞–∑–º–µ—Ä */
            font-weight: bold;
            vertical-align: middle;
            display: inline-block;
          
        }
    `;
    document.head.appendChild(style);
    document.querySelector("#closed-tickets").addEventListener("mouseover", function (event) {
        let row = event.target.closest("tr"); // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç—Ä–æ–∫—É, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –Ω–∞–≤–µ–ª–∏ –∫—É—Ä—Å–æ—Ä
        if (row && row.id.startsWith("ticket-")) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ —Å—Ç—Ä–æ–∫–∞ —Ç–∏–∫–µ—Ç–∞
            let star = row.querySelector(".star"); // –ò—â–µ–º –∑–≤—ë–∑–¥–æ—á–∫—É –≤–Ω—É—Ç—Ä–∏ —Å—Ç—Ä–æ–∫–∏
            if (star) {
                star.remove(); // –£–¥–∞–ª—è–µ–º –∑–≤—ë–∑–¥–æ—á–∫—É
            }
        }
    });
    function checkLimit(input, maxLength, errorId) {
        const errorElement = document.getElementById(errorId);
        if (!errorElement) {
            console.warn(`‚ö†Ô∏è –≠–ª–µ–º–µ–Ω—Ç —Å ID "${errorId}" –Ω–µ –Ω–∞–π–¥–µ–Ω.`);
            return; // –í—ã—Ö–æ–¥–∏–º –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏, –µ—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç–∞ –Ω–µ—Ç
        }
        if (input.value.length > maxLength) {
            errorElement.textContent = "–í—ã –ø—Ä–µ–≤—ã—Å–∏–ª–∏ –ª–∏–º–∏—Ç —Å–∏–º–≤–æ–ª–æ–≤!";
            errorElement.style.display = "block"; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É
            input.classList.add("input-error");
        } else {
            errorElement.textContent = "";
            errorElement.style.display = "none"; // –°–∫—Ä—ã–≤–∞–µ–º –æ—à–∏–±–∫—É
            input.classList.remove("input-error");
        }
    }
    document.getElementById("assigned_admin").addEventListener("input", function () {
        checkLimit(this, 50, "position_error");
    });

    document.getElementById("title").addEventListener("input", function () {
        checkLimit(this, 100, "title_error");
    });

    document.getElementById("description").addEventListener("input", function () {
        checkLimit(this, 500, "description_error");
    });

    document.getElementById("ticketsendform").addEventListener("submit", function (event) {
        const senderName = document.getElementById("position");
        const title = document.getElementById("title");
        const description = document.getElementById("description");

        if (senderName.value.length > 50 || title.value.length > 100 || description.value.length > 500) {
            event.preventDefault();
            alert("–ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π —Ñ–æ—Ä–º—ã!");
        }
    });
});
const openTabBtn = document.getElementById('open-tab-btn');
const closedTabBtn = document.getElementById('closed-tab-btn');
const openTickets = document.getElementById('open-tickets');
const closedTickets = document.getElementById('closed-tickets');
const sendtickettab = document.getElementById('sendtickettab');  
const showsendticketbtn = document.getElementById('showsendticketbtn');  
const ticketsendform = document.getElementById('ticketsendform');  
openTabBtn.addEventListener('click', function() {
    openTickets.style.display = 'block';
    ticketsendform.style.display = "none"
    closedTickets.style.display = 'none';
    openTabBtn.classList.add('active');
    closedTabBtn.classList.remove('active');
    sendtickettab.style.display = 'flex';
});
closedTabBtn.addEventListener('click', function() {
    openTickets.style.display = 'none';
    ticketsendform.style.display = "none"   
    closedTickets.style.display = 'block';
    openTabBtn.classList.remove('active');
    closedTabBtn.classList.add('active');
    sendtickettab.style.display = 'flex ';
});
showsendticketbtn.addEventListener('click', function() {
    sendtickettab.style.display = 'none';
    ticketsendform.style.display = 'block';
    closedTickets.style.display = 'none';
    openTickets.style.display = 'none';
});
function toggleDetails(ticketId) {
    let detailsRow = document.getElementById('details-' + ticketId);
    let button = detailsRow.previousElementSibling.querySelector('.toggle-details-btn');
    if (detailsRow.style.display === 'none' || detailsRow.style.display === '') {
        detailsRow.style.display = 'table-row';
        button.textContent = '–°–∫—Ä—ã—Ç—å –¥–µ—Ç–∞–ª–∏';
    } else {
        detailsRow.style.display = 'none';
        button.textContent = '–ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª–∏';
    }
}